# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2024 CC-BY-4.0 Vyper Team
# This file is distributed under the same license as the Vyper package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Vyper \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-08 10:44+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../constants-and-vars.rst:2
msgid "Environment Variables and Constants"
msgstr ""

#: ../../constants-and-vars.rst:7
msgid "Environment Variables"
msgstr ""

#: ../../constants-and-vars.rst:9
msgid ""
"Environment variables always exist in the namespace and are primarily "
"used to provide information about the blockchain or current transaction."
msgstr ""

#: ../../constants-and-vars.rst:12
msgid "Block and Transaction Properties"
msgstr ""

#: ../../constants-and-vars.rst:15 ../../constants-and-vars.rst:52
msgid "Name"
msgstr ""

#: ../../constants-and-vars.rst:15 ../../constants-and-vars.rst:52
msgid "Type"
msgstr ""

#: ../../constants-and-vars.rst:15 ../../constants-and-vars.rst:52
msgid "Value"
msgstr ""

#: ../../constants-and-vars.rst:17
msgid "``block.coinbase``"
msgstr ""

#: ../../constants-and-vars.rst:17 ../../constants-and-vars.rst:30
#: ../../constants-and-vars.rst:32 ../../constants-and-vars.rst:54
msgid "``address``"
msgstr ""

#: ../../constants-and-vars.rst:17
msgid "Current block miner's address"
msgstr ""

#: ../../constants-and-vars.rst:18
msgid "``block.difficulty``"
msgstr ""

#: ../../constants-and-vars.rst:18 ../../constants-and-vars.rst:20
#: ../../constants-and-vars.rst:21 ../../constants-and-vars.rst:22
#: ../../constants-and-vars.rst:23 ../../constants-and-vars.rst:25
#: ../../constants-and-vars.rst:26 ../../constants-and-vars.rst:28
#: ../../constants-and-vars.rst:29 ../../constants-and-vars.rst:31
#: ../../constants-and-vars.rst:33 ../../constants-and-vars.rst:55
msgid "``uint256``"
msgstr ""

#: ../../constants-and-vars.rst:18
msgid "Current block difficulty"
msgstr ""

#: ../../constants-and-vars.rst:19
msgid "``block.prevrandao``"
msgstr ""

#: ../../constants-and-vars.rst:19 ../../constants-and-vars.rst:24
msgid "``bytes32``"
msgstr ""

#: ../../constants-and-vars.rst:19
msgid "Current randomness beacon provided by the beacon chain"
msgstr ""

#: ../../constants-and-vars.rst:20
msgid "``block.number``"
msgstr ""

#: ../../constants-and-vars.rst:20
msgid "Current block number"
msgstr ""

#: ../../constants-and-vars.rst:21
msgid "``block.gaslimit``"
msgstr ""

#: ../../constants-and-vars.rst:21
msgid "Current block's gas limit"
msgstr ""

#: ../../constants-and-vars.rst:22
msgid "``block.basefee``"
msgstr ""

#: ../../constants-and-vars.rst:22
msgid "Current block's base fee"
msgstr ""

#: ../../constants-and-vars.rst:23
msgid "``block.blobbasefee``"
msgstr ""

#: ../../constants-and-vars.rst:23
msgid "Current block's blob gas base fee"
msgstr ""

#: ../../constants-and-vars.rst:24
msgid "``block.prevhash``"
msgstr ""

#: ../../constants-and-vars.rst:24
msgid "Equivalent to ``blockhash(block.number - 1)``"
msgstr ""

#: ../../constants-and-vars.rst:25
msgid "``block.timestamp``"
msgstr ""

#: ../../constants-and-vars.rst:25
msgid "Current block epoch timestamp"
msgstr ""

#: ../../constants-and-vars.rst:26
msgid "``chain.id``"
msgstr ""

#: ../../constants-and-vars.rst:26
msgid "Chain ID"
msgstr ""

#: ../../constants-and-vars.rst:27
msgid "``msg.data``"
msgstr ""

#: ../../constants-and-vars.rst:27
msgid "``Bytes``"
msgstr ""

#: ../../constants-and-vars.rst:27
msgid "Message data"
msgstr ""

#: ../../constants-and-vars.rst:28
msgid "``msg.gas``"
msgstr ""

#: ../../constants-and-vars.rst:28
msgid "Remaining gas"
msgstr ""

#: ../../constants-and-vars.rst:29
msgid "``msg.mana``"
msgstr ""

#: ../../constants-and-vars.rst:29
msgid "Remaining gas (alias for ``msg.gas``)"
msgstr ""

#: ../../constants-and-vars.rst:30
msgid "``msg.sender``"
msgstr ""

#: ../../constants-and-vars.rst:30
msgid "Sender of the message (current call)"
msgstr ""

#: ../../constants-and-vars.rst:31
msgid "``msg.value``"
msgstr ""

#: ../../constants-and-vars.rst:31
msgid "Number of wei sent with the message"
msgstr ""

#: ../../constants-and-vars.rst:32
msgid "``tx.origin``"
msgstr ""

#: ../../constants-and-vars.rst:32
msgid "Sender of the transaction (full call chain)"
msgstr ""

#: ../../constants-and-vars.rst:33
msgid "``tx.gasprice``"
msgstr ""

#: ../../constants-and-vars.rst:33
msgid "Gas price of current transaction in wei"
msgstr ""

#: ../../constants-and-vars.rst:38
msgid ""
"``block.prevrandao`` is an alias for the ``block.difficulty`` opcode. "
"Since ``block.difficulty`` is considered deprecated according to "
"`EIP-4399 <https://eips.ethereum.org/EIPS/eip-4399>`_ after \"The Merge\""
" (Paris hard fork), we recommend using ``block.prevrandao``."
msgstr ""

#: ../../constants-and-vars.rst:42
msgid ""
"``msg.data`` requires the usage of :func:`slice <slice>` to explicitly "
"extract a section of calldata. If the extracted section exceeds the "
"bounds of calldata, this will throw. You can check the size of "
"``msg.data`` using :func:`len <len>`."
msgstr ""

#: ../../constants-and-vars.rst:47
msgid "The self Variable"
msgstr ""

#: ../../constants-and-vars.rst:49
msgid ""
"``self`` is an environment variable used to reference a contract from "
"within itself. Along with the normal :ref:`address<address>` members, "
"``self`` allows you to read and write to state variables and to call "
"private functions within the contract."
msgstr ""

#: ../../constants-and-vars.rst:54
msgid "``self``"
msgstr ""

#: ../../constants-and-vars.rst:54
msgid "Current contract's address"
msgstr ""

#: ../../constants-and-vars.rst:55
msgid "``self.balance``"
msgstr ""

#: ../../constants-and-vars.rst:55
msgid "Current contract's balance"
msgstr ""

#: ../../constants-and-vars.rst:59
msgid "Accessing State Variables"
msgstr ""

#: ../../constants-and-vars.rst:61
msgid ""
"``self`` is used to access a contract's :ref:`state variables<structure-"
"state-variables>`, as shown in the following example:"
msgstr ""

#: ../../constants-and-vars.rst:79
msgid "Calling Internal Functions"
msgstr ""

#: ../../constants-and-vars.rst:81
msgid ""
"``self`` is also used to call :ref:`internal functions<structure-"
"functions-internal>` within a contract:"
msgstr ""

#: ../../constants-and-vars.rst:96
msgid "Custom Constants"
msgstr ""

#: ../../constants-and-vars.rst:98
msgid ""
"Custom constants can be defined at a global level in Vyper. To define a "
"constant, make use of the ``constant`` keyword."
msgstr ""

